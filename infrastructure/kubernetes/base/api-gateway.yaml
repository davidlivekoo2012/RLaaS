apiVersion: apps/v1
kind: Deployment
metadata:
  name: rlaas-api-gateway
  labels:
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/instance: rlaas
    app.kubernetes.io/component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: api-gateway
      app.kubernetes.io/instance: rlaas
  template:
    metadata:
      labels:
        app.kubernetes.io/name: api-gateway
        app.kubernetes.io/instance: rlaas
        app.kubernetes.io/component: api
    spec:
      containers:
      - name: api-gateway
        image: rlaas:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: API_HOST
          value: "0.0.0.0"
        - name: API_PORT
          value: "8000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: rlaas-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: rlaas-secrets
              key: redis-url
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "kafka:9092"
        - name: MLFLOW_TRACKING_URI
          value: "http://mlflow:5000"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: rlaas-config
---
apiVersion: v1
kind: Service
metadata:
  name: rlaas-api-gateway
  labels:
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/instance: rlaas
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/instance: rlaas
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rlaas-api-gateway
  labels:
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/instance: rlaas
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.rlaas.ai
    secretName: rlaas-api-tls
  rules:
  - host: api.rlaas.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rlaas-api-gateway
            port:
              number: 80
